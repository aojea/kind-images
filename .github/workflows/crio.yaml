name: CRIO

on:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

env:
  GO_VERSION: "1.17.0"
  IMAGE: "kindest/node"
  VERSION: "1.21"
  MINOR: "1"
  OS: "xUbuntu_21.04"

jobs:
  crio:
    name: CRIO
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Set up environment
        run: |
          export GOPATH=$(go env GOPATH)
          echo "GOPATH=$GOPATH" >> $GITHUB_ENV
          echo "$GOPATH/bin" >> $GITHUB_PATH

      - name: Build kind image
        run: |
          docker build -t aojea/kindnode:latest -f Dockerfile.CRIO \
            --build-arg IMAGE=${{ env.IMAGE }}     \
            --build-arg VERSION=${{ env.VERSION }} \
            --build-arg MINOR=${{ env.MINOR }}     \
            --build-arg OS=${{ env.OS }}           \
            .

      - name: Create multi node cluster
        run: |
          kind create cluster -v7 --wait 1m --retain --config=kind-crio.yaml --image=aojea/kindnode:latest

      - name: Get Cluster status
        run: |
          # wait network is ready
          kubectl wait --for=condition=ready pods --namespace=kube-system -l k8s-app=kube-dns
          kubectl get nodes -o wide
          kubectl get pods -A
          # Check everything is fine
          kubectl rollout status daemonset -n kube-system kindnet --timeout=200s
          kubectl get nodes -o wide
          kubectl get pods -A

      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Publish image
        run: |
          timestamp=$(date +%s)
          docker tag aojea/kindnode:latest quay.io/aojea/kindnode:crio${timestamp}
          docker push quay.io/aojea/kindnode:crio${timestamp}

      - name: Export logs
        if: always()
        run: |
          mkdir -p /tmp/kind/logs
          kind export logs /tmp/kind/logs
          sudo chown -R $USER:$USER /tmp/kind/logs

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: kind-logs-${{ env.JOB_NAME }}-${{ github.run_id }}
          path: /tmp/kind/logs

      - name: Delete cluster
        run: kind delete cluster
